{"version":3,"file":"ngsildify.js","sourceRoot":"","sources":["../../lib/ngsildify.ts"],"names":[],"mappings":"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","sourcesContent":["import { JsonLdContext } from \"jsonld-context-parser\";\r\nconst { parse } = require('wkt');\r\n\r\nexport interface NgsildifyOptions {\r\n    versionOfPath?: string,\r\n    timestampPath?: string\r\n}\r\nexport class Ngsildify {\r\n    private resultArray: any = [];\r\n    private jsonLdContext: JsonLdContext = \"\";\r\n    // TODO: Remove hardcoded properties. This should be done via configuration\r\n    private timestampPath: string = \"http://www.w3.org/ns/prov#generatedAtTime\";\r\n    private versionOfPath: string = \"http://purl.org/dc/terms/isVersionOf\";\r\n    private observedAt: string;\r\n\r\n    public constructor(options?: NgsildifyOptions) {\r\n        if (options && options.timestampPath) this.timestampPath = options.timestampPath;\r\n        if (options && options.versionOfPath) this.versionOfPath = options.versionOfPath;\r\n    }\r\n\r\n    public async transform(input: any): Promise<any[]> {\r\n        this.resultArray = [];\r\n        let context: any = {\r\n            \"@context\": [\r\n                \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\",\r\n            ],\r\n        };\r\n        let rootObjects: any[] = [];\r\n        if (Array.isArray(input)) {\r\n            for (let i in input) {\r\n                // reset context on new object!\r\n                context = {\r\n                    \"@context\": [\r\n                        \"https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context.jsonld\",\r\n                    ],\r\n                };\r\n                if (typeof input[i] === \"object\") {\r\n                    if (input[i][\"@context\"]) {\r\n                        // Add context from input to result\r\n                        context[\"@context\"] = context[\"@context\"].concat(input[i][\"@context\"]);\r\n                    }\r\n                    // Set context to be used across entities\r\n                    this.jsonLdContext = context[\"@context\"];\r\n                    // If isVersionOf and timestamp, materialize object with observedAt\r\n                    if (input[i][this.versionOfPath]) {\r\n                        let materializedObject = JSON.parse(JSON.stringify(input[i]));\r\n                        if (materializedObject[this.versionOfPath] && materializedObject[this.versionOfPath]['id']) materializedObject[\"id\"] = materializedObject[this.versionOfPath]['id'];\r\n                        else if (materializedObject[this.versionOfPath] && materializedObject[this.versionOfPath]['@id']) materializedObject[\"id\"] = materializedObject[this.versionOfPath]['@id'];\r\n                        else materializedObject[\"id\"] = materializedObject[this.versionOfPath];\r\n                        delete materializedObject[this.versionOfPath];\r\n                        if (materializedObject['@id']) delete materializedObject['@id'];\r\n                        if (materializedObject[this.timestampPath]) {\r\n                            if (materializedObject[this.timestampPath]['value']) this.observedAt = materializedObject[this.timestampPath]['value'];\r\n                            else if (materializedObject[this.timestampPath]['@value']) this.observedAt = materializedObject[this.timestampPath]['@value'];\r\n                            else this.observedAt = materializedObject[this.timestampPath];\r\n                            delete materializedObject[this.timestampPath];\r\n                        }\r\n                        const tempMaterializedHandleRoot = await this.handleRoot(materializedObject);\r\n                        if (tempMaterializedHandleRoot != null) {\r\n                            rootObjects.push(tempMaterializedHandleRoot);\r\n                        }\r\n                    }\r\n                    const tempHandleRoot = await this.handleRoot(input[i]);\r\n                    if (tempHandleRoot != null) {\r\n                        rootObjects.push(tempHandleRoot);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            if (input[\"@context\"] && !context[\"@context\"].includes(input[\"@context\"])) {\r\n                // Add context from input to result\r\n                context[\"@context\"] = context[\"@context\"].concat(input[\"@context\"]);\r\n            }\r\n            // Set context to be used across entities\r\n            this.jsonLdContext = context[\"@context\"];\r\n            // If isVersionOf, materialize object\r\n            if (input[this.versionOfPath]) {\r\n                let materializedObject = JSON.parse(JSON.stringify(input));\r\n\r\n                if (materializedObject[this.versionOfPath] && materializedObject[this.versionOfPath]['id']) {\r\n                    materializedObject[\"id\"] = materializedObject[this.versionOfPath]['id'];\r\n                } else if (materializedObject[this.versionOfPath] && materializedObject[this.versionOfPath]['@id']) {\r\n                    materializedObject[\"id\"] = materializedObject[this.versionOfPath]['@id'];\r\n                } else {\r\n                    materializedObject[\"id\"] = materializedObject[this.versionOfPath];\r\n                }\r\n\r\n                delete materializedObject[this.versionOfPath];\r\n\r\n                if (materializedObject['@id']) {\r\n                    delete materializedObject['@id'];\r\n                }\r\n\r\n                if (materializedObject[this.timestampPath]) {\r\n                    if (materializedObject[this.timestampPath]['value']) {\r\n                        this.observedAt = materializedObject[this.timestampPath]['value'];\r\n                    } else if (materializedObject[this.timestampPath]['@value']) {\r\n                        this.observedAt = materializedObject[this.timestampPath]['@value'];\r\n                    } else {\r\n                        this.observedAt = materializedObject[this.timestampPath];\r\n                    }\r\n\r\n                    delete materializedObject[this.timestampPath];\r\n                }\r\n                rootObjects = rootObjects.concat(await this.handleRoot(materializedObject));\r\n            }\r\n            const tempHandleRoot = await this.handleRoot(input);\r\n            if (tempHandleRoot != null)\r\n                rootObjects.push(tempHandleRoot);\r\n        }\r\n        this.resultArray.push(...rootObjects);\r\n        return this.resultArray\r\n    }\r\n\r\n    protected async handleRoot(input: any): Promise<any> {\r\n        if (typeof input === \"object\" && (input[\"@id\"] || input[\"id\"])) {\r\n            const id = this.getIdFromValue(input, \"\", \"\", 1);\r\n            let result: any = {\r\n                \"@context\": this.jsonLdContext,\r\n            };\r\n            for (const [key, value] of Object.entries(input)) {\r\n                if (key != \"@context\") {\r\n                    if (Array.isArray(value) && key != \"@type\" && key != \"type\") {\r\n                        let expandedValueResult = [];\r\n                        for (let v in value)\r\n                            expandedValueResult.push(await this.handleValue(value[v], id, key, parseInt(v)));\r\n                        result[key] = expandedValueResult;\r\n                    } else if(key === \"id\") {\r\n                        result[key] = value;\r\n                        if (this.observedAt) result['observedAt'] = this.observedAt;\r\n                    } else if (key === \"@id\") {\r\n                        result[\"id\"] = value;\r\n                        delete result[\"@id\"];\r\n                        if (this.observedAt) result['observedAt'] = this.observedAt;\r\n                    } else if (key === \"type\") {\r\n                        result[key] = value;\r\n                    } else if (key === \"@type\") {\r\n                        result[\"type\"] = value;\r\n                        delete result[\"@type\"];\r\n                    } else {\r\n                        result[key] = await this.handleValue(value, id, key, 1);\r\n                        // Add transformation of WKT to GeoJSON\r\n                        if (key === \"http://www.opengis.net/ont/geosparql#asWKT\") {\r\n                            const v2 = <any>value;\r\n                            if (v2 && (v2['@value'] || v2['value'])) {\r\n                                let v = v2['@value'] ? v2['@value'] : (v2['value'] ? v2['value'] : '');\r\n                                // Remove CRS\r\n                                v = this.removeCRS(v);\r\n                                const geoJSON = parse(v);\r\n                                result[\"location\"] = {\r\n                                    \"type\": \"GeoProperty\",\r\n                                    \"value\": geoJSON\r\n                                }\r\n                            }\r\n                        }\r\n                        if (key === \"https://parktrack.geosparc.com/parkingBay/geometry\") {\r\n                            let v2 = <string>value;\r\n                            // Remove CRS\r\n                            v2 = this.removeCRS(v2);\r\n                            const geoJSON = parse(v2);\r\n                            if (geoJSON) {\r\n                                result[\"location\"] = {\r\n                                    \"type\": \"GeoProperty\",\r\n                                    \"value\": geoJSON\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!result[\"type\"] && !result[\"@type\"]) {\r\n                result[\"type\"] = \"Entity\"; // fallback when no type or @type found\r\n            }\r\n            return result;\r\n        }\r\n        return input;\r\n    }\r\n\r\n    private removeCRS(v: string): string {\r\n        if (v.indexOf('<') != -1 && v.indexOf('>') != -1) {\r\n            return v.replace(v.substring(v.indexOf('<'), v.indexOf('>') + 2), '');\r\n        } else {\r\n            return v;\r\n        }\r\n    }\r\n\r\n    protected async handleValue(value: any, prevId: string, relation: string, index: number): Promise<any> {\r\n        let res;\r\n        if (typeof value === \"object\" \r\n            && (value['value'] \r\n            || value['@value'] \r\n            || value['https://parktrack.geosparc.com/parkingBay/status#value'])) {\r\n            // TODO use language, datetime property etc\r\n            const v = value['value'] ? value['value'] : value['@value'] ? value['@value'] : value['https://parktrack.geosparc.com/parkingBay/status#value'];\r\n            res = {\r\n                \"type\": \"Property\",\r\n                value: v\r\n            };\r\n        } else if (typeof value === \"object\" &&\r\n            relation !== \"@type\" &&\r\n            relation !== \"type\"\r\n        ) {\r\n            const id = this.getIdFromValue(value, prevId, relation, index);\r\n            if (!value[\"id\"] && !value[\"@id\"]) value[\"id\"] = id; // make sure value has an identifier\r\n            if (value[\"type\"] || value[\"@type\"]) {\r\n                // create new result from this object and return the relationship\r\n                const newResult = await this.handleRoot(value);\r\n                if (newResult && (newResult[\"type\"] || newResult[\"@type\"])) {\r\n                    this.resultArray.push(newResult);\r\n                }\r\n            }\r\n\r\n            // If isVersionOf, materialize object with observedAt\r\n            if (value[this.versionOfPath] && (value[this.versionOfPath].id || value[this.versionOfPath]['@id'])) {\r\n                let materializedValue = JSON.parse(JSON.stringify(value)); // clone\r\n                materializedValue[\"id\"] = materializedValue[this.versionOfPath].id ? materializedValue[this.versionOfPath].id : materializedValue[this.versionOfPath]['@id'] ? materializedValue[this.versionOfPath]['@id'] : id;\r\n                delete materializedValue[this.versionOfPath];\r\n                materializedValue[\"type\"] = materializedValue[\"type\"] ? materializedValue[\"type\"] : materializedValue[\"@type\"] ? materializedValue[\"@type\"] : \"Entity\";\r\n                if (value[this.timestampPath]) {\r\n                    materializedValue[\"observedAt\"] = materializedValue[this.timestampPath];\r\n                    delete materializedValue[this.timestampPath];\r\n                } else if (this.observedAt) {\r\n                    materializedValue[\"observedAt\"] = this.observedAt;\r\n                }\r\n                const materializedResult = await this.handleRoot(materializedValue);\r\n                this.resultArray.push(materializedResult);\r\n            }\r\n            res = {\r\n                \"type\": \"Relationship\",\r\n                object: id,\r\n            };\r\n        } else if (typeof value === \"string\" && value.startsWith('http')) {\r\n            res = {\r\n                \"type\": \"Relationship\",\r\n                object: value,\r\n            };\r\n        } else if (typeof value === \"string\" &&\r\n            relation !== \"@type\" &&\r\n            relation !== \"type\") {\r\n            // create new property from this string and return the value\r\n            res = {\r\n                \"type\": \"Property\",\r\n                value: value,\r\n            };\r\n        } else {\r\n            res = value;\r\n        }\r\n        if (this.observedAt) res['observedAt'] = this.observedAt;\r\n        return res;\r\n    }\r\n\r\n    protected getIdFromValue(value: any, prevId: string, relation: string, index: number): string {\r\n        let id = '';\r\n        if (typeof value === \"string\") id = value;\r\n        // value is only a string\r\n        else if (value['id'] && value['id']['id']) id = value['id']['id'];\r\n        else if (value['@id'] && value['@id']['@id']) id = value['@id']['@id'];\r\n        else if (value[\"@id\"]) id = value[\"@id\"];\r\n        else if (value[\"id\"]) id = value[\"id\"];\r\n        else id = prevId + \"/\" + relation.toLowerCase() + \"/\" + index;\r\n\r\n        return id;\r\n    }\r\n}\r\n\r\n"]}